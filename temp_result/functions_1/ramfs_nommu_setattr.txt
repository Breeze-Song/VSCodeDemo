fn ramfs_nommu_setattr(mnt_userns: &mut user_namespace, dentry: &mut dentry, ia: &mut iattr) -> i32 {
    let inode = d_inode(dentry);
    let old_ia_valid = ia.ia_valid;
    let mut ret = 0;
    ret = setattr_prepare(&init_user_ns, dentry, ia);
    if ret != 0 {
        ia.ia_valid = old_ia_valid;
        return ret;
    }
    if (ia.ia_valid & ATTR_SIZE) != 0 {
        let size = inode.i_size;
        if ia.ia_size != size {
            ret = ramfs_nommu_resize(inode, ia.ia_size, size);
            if ret < 0 || ia.ia_valid == ATTR_SIZE {
                ia.ia_valid = old_ia_valid;
                return ret;
            }
        } else {
            ia.ia_valid |= ATTR_MTIME | ATTR_CTIME;
        }
    }
    setattr_copy(&init_user_ns, inode, ia);
    ia.ia_valid = old_ia_valid;
    ret
}